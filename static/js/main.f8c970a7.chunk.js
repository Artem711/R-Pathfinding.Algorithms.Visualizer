(this["webpackJsonpr-pathfinding_visualizer"]=this["webpackJsonpr-pathfinding_visualizer"]||[]).push([[0],{16:function(n,t,e){},21:function(n,t,e){},23:function(n,t,e){},24:function(n,t,e){"use strict";e.r(t);var o=e(0),i=e.n(o),r=e(3),c=e.n(r),u=(e(16),e(10)),s=e(9),a=e(2),f=function(n,t){return Object(a.b)(n,t)},d=e(5);function l(n,t,e){var o=[];t.distance=0;for(var i=function(n){var t,e=[],o=Object(d.a)(n);try{for(o.s();!(t=o.n()).done;){var i,r=t.value,c=Object(d.a)(r);try{for(c.s();!(i=c.n()).done;){var u=i.value;e.push(u)}}catch(s){c.e(s)}finally{c.f()}}}catch(s){o.e(s)}finally{o.f()}return e}(n);i.length;){v(i);var r=i.shift();if(r){if(r.isWall)continue;if(r.distance===1/0)return o;if(r.isVisited=!0,o.push(r),r===e)return o;h(r,n)}}}function v(n){n.sort((function(n,t){return n.distance-t.distance}))}function h(n,t){var e,o=function(n,t){var e=[],o=n.column,i=n.row;i>0&&e.push(t[i-1][o]);i<t.length-1&&e.push(t[i+1][o]);o>0&&e.push(t[i][o-1]);o<t[0].length-1&&e.push(t[i][o+1]);return e.filter((function(n){return!n.isVisited}))}(n,t),i=Object(d.a)(o);try{for(i.s();!(e=i.n()).done;){var r=e.value;r.distance=n.distance+1,r.previousNode=n}}catch(c){i.e(c)}finally{i.f()}}e(21);var j=e(1),m=function(n){var t=Object(o.useState)([]),e=Object(s.a)(t,2),i=e[0],r=e[1],c=Object(o.useState)(!1),u=Object(s.a)(c,2),a=u[0],f=u[1];Object(o.useEffect)((function(){var n=p();r(n)}),[]);var d=function(n,t){var e=g(i,n,t);r(e),f(!0)},v=function(n,t){if(a){var e=g(i,n,t);r(e)}},h=function(){f(!1)},m=function(n){for(var t=function(t){setTimeout((function(){var e=n[t],o=document.getElementById("node-".concat(e.row,"-").concat(e.column));o&&(o.className="node node-shortest-path")}),50*t)},e=0;e<n.length;e++)t(e)},b=function(){var n=i[10][15],t=i[10][35];!function(n,t){if(n&&t)for(var e=function(e){if(e===n.length)return setTimeout((function(){m(t)}),10*e),{v:void 0};setTimeout((function(){var t=n[e],o=document.getElementById("node-".concat(t.row,"-").concat(t.column));o&&(o.className="node node-visited")}),10*e)},o=0;o<=n.length;o++){var i=e(o);if("object"===typeof i)return i.v}}(l(i,n,t),function(n){for(var t=[],e=n;null!==e;)t.unshift(e),e=e.previousNode;return t}(t))};return Object(j.jsxs)(j.Fragment,{children:[Object(j.jsx)("button",{onClick:function(){return b()},children:"Visualize Dijkstra's Algorithm"}),Object(j.jsx)("div",{className:"grid",children:i.map((function(n,t){return Object(j.jsx)("div",{children:n.map((function(n,t){return Object(j.jsx)(x,{node:n,isFinish:n.isFinish,isStart:n.isStart,onMouseDown:d,onMouseEnter:v,onMouseUp:h},t)}))},t)}))})]})},b=i.a.memo(m,f),p=function(){for(var n=[],t=0;t<20;t++){for(var e=[],o=0;o<50;o++)e.push(O(o,t));n.push(e)}return n},O=function(n,t){return{column:n,row:t,isStart:10===t&&15===n,isFinish:10===t&&35===n,distance:1/0,isVisited:!1,isWall:!1,previousNode:null}},g=function(n,t,e){var o=n.slice(),i=o[t][e],r=Object(u.a)(Object(u.a)({},i),{},{isWall:!i.isWall});return o[t][e]=r,o},w=(e(23),function(n){var t=n.isFinish?"node-finish":n.isStart?"node-start":n.node.isWall?"node-wall":"";return Object(j.jsx)("div",{id:"node-".concat(n.node.row,"-").concat(n.node.column),className:"node ".concat(t),onMouseDown:function(){return n.onMouseDown(n.node.row,n.node.column)},onMouseEnter:function(){return n.onMouseEnter(n.node.row,n.node.column)},onMouseUp:function(){return n.onMouseUp()}})}),x=i.a.memo(w,f),y=function(){return Object(j.jsx)("div",{children:Object(j.jsx)(b,{})})},M=i.a.memo(y,f),E=e(11),N=Object(E.a)({reducer:{}});c.a.render(Object(j.jsx)(a.a,{store:N,children:Object(j.jsx)(M,{})}),document.getElementById("root"))}},[[24,1,2]]]);
//# sourceMappingURL=main.f8c970a7.chunk.js.map